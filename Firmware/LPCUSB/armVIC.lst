   1              		.file	"armVIC.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	restoreIRQ
  13              	restoreIRQ:
  14              	.LFB5:
  15              		.file 1 "../LPCUSB/armVIC.c"
   1:../LPCUSB/armVIC.c **** /******************************************************************************
   2:../LPCUSB/armVIC.c ****  *
   3:../LPCUSB/armVIC.c ****  * $RCSfile$
   4:../LPCUSB/armVIC.c ****  * $Revision: 124 $
   5:../LPCUSB/armVIC.c ****  *
   6:../LPCUSB/armVIC.c ****  * This module provides the interface routines for setting up and
   7:../LPCUSB/armVIC.c ****  * controlling the various interrupt modes present on the ARM processor.
   8:../LPCUSB/armVIC.c ****  * Copyright 2004, R O SoftWare
   9:../LPCUSB/armVIC.c ****  * No guarantees, warrantees, or promises, implied or otherwise.
  10:../LPCUSB/armVIC.c ****  * May be used for hobby or commercial purposes provided copyright
  11:../LPCUSB/armVIC.c ****  * notice remains intact.
  12:../LPCUSB/armVIC.c ****  *
  13:../LPCUSB/armVIC.c ****  *****************************************************************************/
  14:../LPCUSB/armVIC.c **** #include "type.h"
  15:../LPCUSB/armVIC.c **** #include "armVIC.h"
  16:../LPCUSB/armVIC.c **** 
  17:../LPCUSB/armVIC.c **** #define IRQ_MASK 0x00000080
  18:../LPCUSB/armVIC.c **** #define FIQ_MASK 0x00000040
  19:../LPCUSB/armVIC.c **** #define INT_MASK (IRQ_MASK | FIQ_MASK)
  20:../LPCUSB/armVIC.c **** 
  21:../LPCUSB/armVIC.c **** static inline unsigned __get_cpsr(void)
  22:../LPCUSB/armVIC.c **** {
  23:../LPCUSB/armVIC.c ****   unsigned long retval;
  24:../LPCUSB/armVIC.c ****   asm volatile (" mrs  %0, cpsr" : "=r" (retval) : /* no inputs */  ); 
  25:../LPCUSB/armVIC.c ****   return retval;
  26:../LPCUSB/armVIC.c **** }
  27:../LPCUSB/armVIC.c **** 
  28:../LPCUSB/armVIC.c **** static inline void __set_cpsr(unsigned val)
  29:../LPCUSB/armVIC.c **** {
  30:../LPCUSB/armVIC.c ****   asm volatile (" msr  cpsr, %0" : /* no outputs */ : "r" (val)  );	
  31:../LPCUSB/armVIC.c **** }
  32:../LPCUSB/armVIC.c **** 
  33:../LPCUSB/armVIC.c **** unsigned disableIRQ(void)
  34:../LPCUSB/armVIC.c **** {
  35:../LPCUSB/armVIC.c ****   unsigned _cpsr;
  36:../LPCUSB/armVIC.c **** 
  37:../LPCUSB/armVIC.c ****   _cpsr = __get_cpsr();
  38:../LPCUSB/armVIC.c ****   __set_cpsr(_cpsr | IRQ_MASK);
  39:../LPCUSB/armVIC.c ****   return _cpsr;
  40:../LPCUSB/armVIC.c **** }
  41:../LPCUSB/armVIC.c **** 
  42:../LPCUSB/armVIC.c **** unsigned restoreIRQ(unsigned oldCPSR)
  43:../LPCUSB/armVIC.c **** {
  16              	 Function supports interworking.
  17              		@ args = 0, pretend = 0, frame = 0
  18              		@ frame_needed = 0, uses_anonymous_args = 0
  19              		@ link register save eliminated.
  20              	.LVL0:
  21              		@ lr needed for prologue
  22              	.LBB6:
  23              	.LBB7:
  24              		.loc 1 24 0
  25              		 mrs  r2, cpsr
  26 0000 00200FE1 	.LVL1:
  27              	.LBE7:
  28              	.LBE6:
  29              	.LBB8:
  30              	.LBB9:
  31              		.loc 1 30 0
  32              		and	r0, r0, #128
  33 0004 800000E2 	.LVL2:
  34              		bic	r3, r2, #128
  35 0008 8030C2E3 		orr	r3, r3, r0
  36 000c 003083E1 		 msr  cpsr, r3
  37 0010 03F029E1 	.LBE9:
  38              	.LBE8:
  39              		.loc 1 49 0
  44:../LPCUSB/armVIC.c **** 
  45:../LPCUSB/armVIC.c **** 
  46:../LPCUSB/armVIC.c **** unsigned restoreIRQ(unsigned oldCPSR)
  47:../LPCUSB/armVIC.c **** {
  48:../LPCUSB/armVIC.c ****   unsigned _cpsr;
  49:../LPCUSB/armVIC.c **** 
  40              	:
  42 0018 1EFF2FE1 		.align	2
  43              		.global	restoreFIQ
  45              	restoreFIQ:
  46              	.LFB8:
  47              		.loc 1 70 0
  48              		@ Function supports interworking.
  49              		@ args = 0, pretend = 0, frame = 0
  50:../LPCUSB/armVIC.c **** (unsigned oldCPSR)
  51:../LPCUSB/armVIC.c **** {
  52:../LPCUSB/armVIC.c ****   unsigned _cpsr;
  53:../LPCUSB/armVIC.c **** 
  54:../LPCUSB/armVIC.c ****   _cpsr = __get_cpsr();
  55:../LPCUSB/armVIC.c ****   __set_cpsr((_cpsr & ~IRQ_MASK) | (oldCPSR & IRQ_MASK));
  56:../LPCUSB/armVIC.c ****   return _cpsr;
  57:../LPCUSB/armVIC.c **** }
  58:../LPCUSB/armVIC.c **** 
  59:../LPCUSB/armVIC.c **** unsigned enableIRQ(void)
  60:../LPCUSB/armVIC.c **** {
  61:../LPCUSB/armVIC.c ****   unsigned _cpsr;
  62:../LPCUSB/armVIC.c **** 
  63:../LPCUSB/armVIC.c ****   _cpsr = __get_cpsr();
  64:../LPCUSB/armVIC.c ****   __set_cpsr(_cpsr & ~IRQ_MASK);
  65:../LPCUSB/armVIC.c ****   return _cpsr;
  66:../LPCUSB/armVIC.c **** }
  67:../LPCUSB/armVIC.c **** 
  68:../LPCUSB/armVIC.c **** unsigned disableFIQ(void)
  69:../LPCUSB/armVIC.c **** {
  70:../LPCUSB/armVIC.c ****   unsigned _cpsr;
  50              	eeded = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL3:
  53              		@ lr needed for prologue
  54              	.LBB14:
  55              	.LBB15:
  56              		.loc 1 24 0
  57              		 mrs  r2, cpsr
  58              	.LVL4:
  59              	.LBE15:
  60 001c 00200FE1 	.LBE14:
  61              	.LBB16:
  62              	.LBB17:
  63              		.loc 1 30 0
  64              		and	r0, r0, #64
  65              	.LVL5:
  66              		bic	r3, r2, #64
  67 0020 400000E2 		orr	r3, r3, r0
  68              		 msr  cpsr, r3
  69 0024 4030C2E3 	.LBE17:
  70 0028 003083E1 	.LBE16:
  71 002c 03F029E1 		.loc 1 76 0
  72              		mov	r0, r2
  73              		bx	lr
  71:../LPCUSB/armVIC.c **** d)
  72:../LPCUSB/armVIC.c **** {
  73:../LPCUSB/armVIC.c ****   unsigned _cpsr;
  74:../LPCUSB/armVIC.c **** 
  75:../LPCUSB/armVIC.c ****   _cpsr = __get_cpsr();
  76:../LPCUSB/armVIC.c ****   __set_cpsr(_cpsr | FIQ_MASK);
  74              	, .-restoreFIQ
  75 0030 0200A0E1 		.align	2
  76 0034 1EFF2FE1 		.global	disableFIQ
  78              	disableFIQ:
  79              	.LFB7:
  80              		.loc 1 61 0
  81              		@ Function supports interworking.
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		@ lr needed for prologue
  86              	.LBB22:
  87              	.LBB23:
  88              		.loc 1 24 0
  89              		 mrs  r0, cpsr
  90              	.LVL6:
  91              	.LBE23:
  92              	.LBE22:
  93 0038 00000FE1 	.LBB24:
  94              	.LBB25:
  95              		.loc 1 30 0
  96              		orr	r3, r0, #64
  97              		 msr  cpsr, r3
  98              	.LVL7:
  99              	.LBE25:
 100 003c 403080E3 	.LBE24:
 101 0040 03F029E1 		.loc 1 67 0
 102              		bx	lr
 103              	.LFE7:
 105              		.align	2
 106 0044 1EFF2FE1 		.global	enableFIQ
 108              	enableFIQ:
 109              	.LFB9:
 110              		.loc 1 79 0
 111              		@ Function supports interworking.
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
  77:../LPCUSB/armVIC.c **** (_cpsr | FIQ_MASK);
  78:../LPCUSB/armVIC.c ****   return _cpsr;
  79:../LPCUSB/armVIC.c **** }
 114              	needed for prologue
 115              	.LBB30:
 116              	.LBB31:
 117              		.loc 1 24 0
 118              		 mrs  r0, cpsr
 119              	.LVL8:
 120              	.LBE31:
 121              	.LBE30:
 122              	.LBB32:
 123 0048 00000FE1 	.LBB33:
 124              		.loc 1 30 0
 125              		bic	r3, r0, #64
 126              		 msr  cpsr, r3
 127              	.LVL9:
 128              	.LBE33:
 129              	.LBE32:
 130 004c 4030C0E3 		.loc 1 85 0
 131 0050 03F029E1 		bx	lr
 132              	.LFE9:
 134              		.align	2
  80:../LPCUSB/armVIC.c ****   return _cpsr;
  81:../LPCUSB/armVIC.c **** }
  82:../LPCUSB/armVIC.c **** 
  83:../LPCUSB/armVIC.c **** unsigned restoreFIQ(unsigned oldCPSR)
  84:../LPCUSB/armVIC.c **** {
  85:../LPCUSB/armVIC.c ****   unsigned _cpsr;
 136 0054 1EFF2FE1 	disableIRQ:
 137              	.LFB4:
 138              		.loc 1 34 0
 139              		@ Function supports interworking.
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143              		@ lr needed for prologue
 144              	.LBB38:
 145              	.LBB39:
 146              		.loc 1 24 0
 147              		 mrs  r0, cpsr
 148              	.LVL10:
 149              	.LBE39:
 150              	.LBE38:
 151              	.LBB40:
 152              	.LBB41:
 153 0058 00000FE1 		.loc 1 30 0
 154              		orr	r3, r0, #128
 155              		 msr  cpsr, r3
 156              	.LVL11:
 157              	.LBE41:
 158              	.LBE40:
 159              		.loc 1 40 0
 160 005c 803080E3 		bx	lr
 161 0060 03F029E1 	.LFE4:
 163              		.align	2
 164              		.global	enableIRQ
 166 0064 1EFF2FE1 	enableIRQ:
 167              	.LFB6:
 168              		.loc 1 52 0
 169              		@ Function supports interworking.
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              		@ lr needed for prologue
 174              	.LBB46:
 175              	.LBB47:
 176              		.loc 1 24 0
 177              		 mrs  r0, cpsr
 178              	.LVL12:
 179              	.LBE47:
 180              	.LBE46:
 181              	.LBB48:
 182              	.LBB49:
 183 0068 00000FE1 		.loc 1 30 0
 184              		bic	r3, r0, #128
 185              		 msr  cpsr, r3
 186              	.LVL13:
 187              	.LBE49:
 188              	.LBE48:
 189              		.loc 1 58 0
 190 006c 8030C0E3 		bx	lr
 191 0070 03F029E1 	.LFE6:
 193              		.section	.debug_frame,"",%progbits
 194              	.Lframe0:
 195              		.4byte	.LECIE0-.LSCIE0
 196 0074 1EFF2FE1 	.LSCIE0:
 197              		.4byte	0xffffffff
 198              		.byte	0x1
 263              		.2byte	0x1
DEFINED SYMBOLS
                            *ABS*:00000000 armVIC.c
C:\Users\nancyhd\AppData\Local\Temp/ccQdbaaa.s:13     .text:00000000 restoreIRQ
C:\Users\nancyhd\AppData\Local\Temp/ccQdbaaa.s:26     .text:00000000 $a
C:\Users\nancyhd\AppData\Local\Temp/ccQdbaaa.s:48     .text:0000001c restoreFIQ
C:\Users\nancyhd\AppData\Local\Temp/ccQdbaaa.s:82     .text:00000038 disableFIQ
C:\Users\nancyhd\AppData\Local\Temp/ccQdbaaa.s:112    .text:00000048 enableFIQ
C:\Users\nancyhd\AppData\Local\Temp/ccQdbaaa.s:142    .text:00000058 disableIRQ
C:\Users\nancyhd\AppData\Local\Temp/ccQdbaaa.s:172    .text:00000068 enableIRQ

NO UNDEFINED SYMBOLS
