   1              		.file	"irq.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	init_VIC
  13              	init_VIC:
  14              	.LFB3:
  15              		.file 1 "../lib/irq.c"
   1:../lib/irq.c  **** /*****************************************************************************
   2:../lib/irq.c  ****  *   irq.c: Interrupt handler C file for Philips LPC214x Family Microprocessors
   3:../lib/irq.c  ****  *
   4:../lib/irq.c  ****  *   Copyright(C) 2006, Philips Semiconductor
   5:../lib/irq.c  ****  *   All rights reserved.
   6:../lib/irq.c  ****  *
   7:../lib/irq.c  ****  *   History
   8:../lib/irq.c  ****  *   2005.10.01  ver 1.00    Prelimnary version, first Release
   9:../lib/irq.c  ****  *
  10:../lib/irq.c  **** ******************************************************************************/
  11:../lib/irq.c  **** #include "LPC214x.h"            /* LPC23XX Peripheral Registers */
  12:../lib/irq.c  **** #include "type.h"
  13:../lib/irq.c  **** #include "irq.h"
  14:../lib/irq.c  **** #include "rprintf.h"
  15:../lib/irq.c  **** 
  16:../lib/irq.c  **** /******************************************************************************
  17:../lib/irq.c  **** ** Function name:       DefaultVICHandler
  18:../lib/irq.c  **** **
  19:../lib/irq.c  **** ** Descriptions:        Default VIC interrupt handler.
  20:../lib/irq.c  **** **              This handler is set to deal with spurious
  21:../lib/irq.c  **** **              interrupt.
  22:../lib/irq.c  **** **              If the IRQ service routine reads the VIC
  23:../lib/irq.c  **** **              address register, and no IRQ slot responses
  24:../lib/irq.c  **** **              as described above, this address is returned.
  25:../lib/irq.c  **** ** parameters:          None
  26:../lib/irq.c  **** ** Returned value:      None
  27:../lib/irq.c  **** **
  28:../lib/irq.c  **** ******************************************************************************/
  29:../lib/irq.c  **** // mthomas: inserted static to avoid gcc-warning
  30:../lib/irq.c  **** static void DefaultVICHandler (void) __attribute__ ((interrupt("IRQ")));
  31:../lib/irq.c  **** static void DefaultVICHandler (void)
  32:../lib/irq.c  **** {
  33:../lib/irq.c  ****     /* if the IRQ is not installed into the VIC, and interrupt occurs, the
  34:../lib/irq.c  ****         default interrupt VIC address will be used. This could happen in a race
  35:../lib/irq.c  ****         condition. For debugging, use this endless loop to trace back. */
  36:../lib/irq.c  ****     /* For more details, see Philips appnote AN10414 */
  37:../lib/irq.c  ****     VICVectAddr = 0;        /* Acknowledge Interrupt */
  38:../lib/irq.c  ****     rprintf("\nDefault VIC Stop");
  39:../lib/irq.c  ****     while ( 1 );
  40:../lib/irq.c  **** }
  41:../lib/irq.c  **** 
  42:../lib/irq.c  **** /* Initialize the interrupt controller */
  43:../lib/irq.c  **** /******************************************************************************
  44:../lib/irq.c  **** ** Function name:       init_VIC
  45:../lib/irq.c  **** **
  46:../lib/irq.c  **** ** Descriptions:        Initialize VIC interrupt controller.
  47:../lib/irq.c  **** ** parameters:          None
  48:../lib/irq.c  **** ** Returned value:      None
  49:../lib/irq.c  **** **
  50:../lib/irq.c  **** ******************************************************************************/
  51:../lib/irq.c  **** void init_VIC(void)
  52:../lib/irq.c  **** {
  16              	 Function supports interworking.
  17              		@ args = 0, pretend = 0, frame = 0
  18              		@ frame_needed = 0, uses_anonymous_args = 0
  19              		@ link register save eliminated.
  20              		.loc 1 57 0
  53:../lib/irq.c  ****     /* initialize VIC*/
  54:../lib/irq.c  ****     VICIntEnClr = 0xffffffff;
  55:../lib/irq.c  ****     VICVectAddr = 0;
  56:../lib/irq.c  ****     VICIntSelect = 0;
  57:../lib/irq.c  **** 
  21              	r3, #0
  22 0000 0030E0E3 		.loc 1 58 0
  58:../lib/irq.c  **** 
  23              	ov	r2, #0
  24 0004 0020A0E3 		.loc 1 57 0
  25              		str	r3, [r3, #-4075]
  26 0008 EB3F03E5 		.loc 1 52 0
  27              		@ lr needed for prologue
  28              		.loc 1 58 0
  29              		str	r2, [r3, #-4047]
  30 000c CF2F03E5 		.loc 1 59 0
  59:../lib/irq.c  **** *******************************/
  31              	 [r3, #-4083]
  32 0010 F32F03E5 		sub	r2, r2, #3840
  33 0014 0F2C42E2 	.L2:
  34              		.loc 1 66 0
  60:../lib/irq.c  ****  Returned value:      None
  61:../lib/irq.c  **** **
  62:../lib/irq.c  **** ******************************************************************************/
  63:../lib/irq.c  **** void init_VIC(void)
  64:../lib/irq.c  **** {
  65:../lib/irq.c  ****     DWORD i = 0;
  66:../lib/irq.c  ****     DWORD *vect_addr, *vect_cntl;
  35              		r3, #0
  36 0018 0030A0E3 		.loc 1 67 0
  67:../lib/irq.c  **** *******************************/
  37              	tr	r3, [r2, #256]
  38 001c 003182E5 		.loc 1 66 0
  39              		str	r3, [r2, #0]
  40 0020 003082E5 		.loc 1 67 0
  41              		add	r2, r2, #4
  42 0024 042082E2 		.loc 1 62 0
  43              		cmn	r2, #3776
  44 0028 3B0D72E3 		bne	.L2
  45 002c F9FFFF1A 		.loc 1 71 0
  68:../lib/irq.c  ****  Returned value:      None
  69:../lib/irq.c  **** **
  70:../lib/irq.c  **** ******************************************************************************/
  71:../lib/irq.c  **** void init_VIC(void)
  46              	.L7
  47 0030 08209FE5 		mvn	r3, #0
  48 0034 0030E0E3 		str	r2, [r3, #-4043]
  49 0038 CB2F03E5 		.loc 1 73 0
  72:../lib/irq.c  ****  None
  73:../lib/irq.c  **** **
  50              	lr
  51 003c 1EFF2FE1 	.L8:
  52              		.align	2
  53              	.L7:
  54              		.word	DefaultVICHandler
  55 0040 00000000 	.LFE3:
  57              		.align	2
  58              		.global	install_irq
  60              	install_irq:
  61              	.LFB4:
  62              		.loc 1 89 0
  74:../lib/irq.c  **** ions:        Initialize VIC interrupt controller.
  75:../lib/irq.c  **** ** parameters:          None
  76:../lib/irq.c  **** ** Returned value:      None
  77:../lib/irq.c  **** **
  78:../lib/irq.c  **** ******************************************************************************/
  79:../lib/irq.c  **** void init_VIC(void)
  80:../lib/irq.c  **** {
  81:../lib/irq.c  ****     DWORD i = 0;
  82:../lib/irq.c  ****     DWORD *vect_addr, *vect_cntl;
  83:../lib/irq.c  **** 
  84:../lib/irq.c  ****     /* initialize VIC*/
  85:../lib/irq.c  ****     VICIntEnClr = 0xffffffff;
  86:../lib/irq.c  ****     VICVectAddr = 0;
  87:../lib/irq.c  ****     VICIntSelect = 0;
  88:../lib/irq.c  **** 
  89:../lib/irq.c  ****     /* set all the vector and vector control register to 0 */
  63              	upports interworking.
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              	.LVL0:
  67              		.loc 1 94 0
  90:../lib/irq.c  **** VectAddr = 0;
  91:../lib/irq.c  ****     VICIntSelect = 0;
  92:../lib/irq.c  **** 
  93:../lib/irq.c  ****     /* set all the vector and vector control register to 0 */
  94:../lib/irq.c  ****     for ( i = 0; i < VIC_SIZE; i++ )
  68              	r3, #1
  69 0044 0130A0E3 		.loc 1 89 0
  70              		str	lr, [sp, #-4]!
  71 0048 04E02DE5 	.LCFI0:
  72              		.loc 1 94 0
  73              		mov	lr, r3, asl r0
  74 004c 13E0A0E1 		mvn	r3, #0
  75 0050 0030E0E3 		str	lr, [r3, #-4075]
  76 0054 EBEF03E5 		ldr	ip, .L21
  77 0058 44C09FE5 		mov	r2, #0
  78 005c 0020A0E3 	.LVL1:
  79              	.L10:
  80              		.loc 1 102 0
  95:../lib/irq.c  ****    /* set all the vector and vector control register to 0 */
  96:../lib/irq.c  ****     for ( i = 0; i < VIC_SIZE; i++ )
  97:../lib/irq.c  ****     {
  98:../lib/irq.c  ****         vect_addr = (DWORD *)(VIC_BASE_ADDR + VECT_ADDR_INDEX + i*4);
  99:../lib/irq.c  ****         vect_cntl = (DWORD *)(VIC_BASE_ADDR + VECT_CNTL_INDEX + i*4);
 100:../lib/irq.c  ****         *vect_addr = 0;
 101:../lib/irq.c  ****         *vect_cntl = 0;
 102:../lib/irq.c  ****     }
  81              	 #-256]
  82 0060 00311CE5 		cmp	r3, #0
  83 0064 000053E3 		.loc 1 96 0
  84              		add	r2, r2, #1
  85 0068 012082E2 		.loc 1 102 0
  86              		beq	.L18
  87 006c 0400000A 		.loc 1 96 0
  88              		cmp	r2, #16
  89 0070 100052E3 		add	ip, ip, #4
  90 0074 04C08CE2 		bne	.L10
  91 0078 F8FFFF1A 		.loc 1 109 0
 103:../lib/irq.c  **** C_BASE_ADDR + VECT_CNTL_INDEX + i*4);
 104:../lib/irq.c  ****         *vect_addr = 0;
 105:../lib/irq.c  ****         *vect_cntl = 0;
 106:../lib/irq.c  ****     }
 107:../lib/irq.c  **** 
 108:../lib/irq.c  ****     /* Install the default VIC handler here */
 109:../lib/irq.c  ****     VICDefVectAddr = (DWORD)DefaultVICHandler;
  92              	
  93 007c 0000A0E3 	.LVL2:
  94              		b	.L16
  95 0080 050000EA 	.LVL3:
  96              	.L18:
  97              		.loc 1 105 0
  98              		orr	r3, r0, #32
  99 0084 203080E3 		str	r3, [ip, #0]
 100 0088 00308CE5 		.loc 1 113 0
 110:../lib/irq.c  **** * Install the default VIC handler here */
 111:../lib/irq.c  ****     VICDefVectAddr = (DWORD)DefaultVICHandler;
 112:../lib/irq.c  ****     return;
 113:../lib/irq.c  **** }
 101              	 #0
 102 008c 0030E0E3 		.loc 1 104 0
 103              		str	r1, [ip, #-256]
 104 0090 00110CE5 		.loc 1 113 0
 105              		str	lr, [r3, #-4079]
 106 0094 EFEF03E5 		mov	r0, #1
 107 0098 0100A0E3 	.LVL4:
 108              	.L16:
 109              		.loc 1 115 0
 114:../lib/irq.c  **** fault VIC handler here */
 115:../lib/irq.c  ****     VICDefVectAddr = (DWORD)DefaultVICHandler;
 110              	[sp], #4
 111 009c 04E09DE4 		bx	lr
 112 00a0 1EFF2FE1 	.L22:
 113              		.align	2
 114              	.L21:
 115              		.word	-3584
 116 00a4 00F2FFFF 	.LFE4:
 118              		.align	2
 119              		.global	uninstall_irq
 121              	uninstall_irq:
 122              	.LFB5:
 123              		.loc 1 130 0
 116:../lib/irq.c  **** * Install the default VIC handler here */
 117:../lib/irq.c  ****     VICDefVectAddr = (DWORD)DefaultVICHandler;
 118:../lib/irq.c  ****     return;
 119:../lib/irq.c  **** }
 120:../lib/irq.c  **** 
 121:../lib/irq.c  **** /******************************************************************************
 122:../lib/irq.c  **** ** Function name:       install_irq
 123:../lib/irq.c  **** **
 124:../lib/irq.c  **** ** Descriptions:        Install interrupt handler
 125:../lib/irq.c  **** **              The max VIC size is 16, but, there are 32 interrupt
 126:../lib/irq.c  **** **              request inputs. Not all of them can be installed into
 127:../lib/irq.c  **** **              VIC table at the same time.
 128:../lib/irq.c  **** **              The order of the interrupt request installation is
 129:../lib/irq.c  **** **              first come first serve.
 130:../lib/irq.c  **** ** parameters:          Interrupt number and interrupt handler address
 124              	pports interworking.
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128              	.LVL5:
 129              		.loc 1 135 0
 131:../lib/irq.c  **** rve.
 132:../lib/irq.c  **** ** parameters:          Interrupt number and interrupt handler address
 133:../lib/irq.c  **** ** Returned value:      true or false, when the table is full, return false
 134:../lib/irq.c  **** **
 135:../lib/irq.c  **** ******************************************************************************/
 130              	3, #1
 131 00a8 0130A0E3 		mov	ip, r3, asl r0
 132 00ac 13C0A0E1 		mvn	r3, #0
 133 00b0 0030E0E3 		str	ip, [r3, #-4075]
 134 00b4 EBCF03E5 		ldr	r2, .L35
 135 00b8 44209FE5 		.loc 1 130 0
 136              		@ lr needed for prologue
 137              		.loc 1 135 0
 138              		mov	r1, #0
 139 00bc 0010A0E3 	.LVL6:
 140              	.L24:
 141              		.loc 1 142 0
 136:../lib/irq.c  **** ***********************************************************************/
 137:../lib/irq.c  **** DWORD install_irq( DWORD IntNumber, void *HandlerAddr )
 138:../lib/irq.c  **** {
 139:../lib/irq.c  ****     DWORD i;
 140:../lib/irq.c  ****     DWORD *vect_addr;
 141:../lib/irq.c  ****     DWORD *vect_cntl;
 142:../lib/irq.c  **** 
 142              	, #0]
 143 00c0 003092E5 		bic	r3, r3, #32
 144 00c4 2030C3E3 		cmp	r3, r0
 145 00c8 000053E1 		.loc 1 137 0
 146              		add	r1, r1, #1
 147 00cc 011081E2 		.loc 1 142 0
 148              		beq	.L32
 149 00d0 0400000A 		.loc 1 137 0
 150              		cmp	r1, #16
 151 00d4 100051E3 		add	r2, r2, #4
 152 00d8 042082E2 		bne	.L24
 153 00dc F7FFFF1A 		.loc 1 149 0
 143:../lib/irq.c  **** Addr )
 144:../lib/irq.c  **** {
 145:../lib/irq.c  ****     DWORD i;
 146:../lib/irq.c  ****     DWORD *vect_addr;
 147:../lib/irq.c  ****     DWORD *vect_cntl;
 148:../lib/irq.c  **** 
 149:../lib/irq.c  ****     VICIntEnClr = 1 << IntNumber;   /* Disable Interrupt */
 154              	.LVL7:
 155 00e0 0000A0E3 		bx	lr
 156              	.LVL8:
 157 00e4 1EFF2FE1 	.L32:
 158              		.loc 1 145 0
 159              		str	r3, [r2, #0]
 160              		.loc 1 144 0
 161 00e8 003082E5 		mov	r3, #0
 162              		str	r3, [r2, #-256]
 163 00ec 0030A0E3 		.loc 1 154 0
 164 00f0 003102E5 		mov	r0, #1
 150:../lib/irq.c  **** ntl;
 151:../lib/irq.c  **** 
 152:../lib/irq.c  ****     VICIntEnClr = 1 << IntNumber;   /* Disable Interrupt */
 153:../lib/irq.c  **** 
 154:../lib/irq.c  ****     for ( i = 0; i < VIC_SIZE; i++ )
 165              		r3, #0
 166 00f4 0100A0E3 		str	ip, [r3, #-4079]
 167              		.loc 1 156 0
 168 00f8 0030E0E3 		bx	lr
 169 00fc EFCF03E5 	.L36:
 155:../lib/irq.c  ****   /* Disable Interrupt */
 156:../lib/irq.c  **** 
 170              	gn	2
 171 0100 1EFF2FE1 	.L35:
 172              		.word	-3584
 173              	.LFE5:
 175 0104 00F2FFFF 		.section	.rodata.str1.4,"aMS",%progbits,1
 176              		.align	2
 177              	.LC0:
 178              		.ascii	"\012Default VIC Stop\000"
 179              		.text
 180              		.align	2
 182 0012 0000     	DefaultVICHandler:
 183              	.LFB2:
 184              		.loc 1 32 0
 185              		@ Interrupt Service Routine.
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		sub	lr, lr, #4
 189              		stmfd	sp!, {r0, r1, r2, r3, ip, lr}
 190              	.LCFI1:
 191 0108 04E04EE2 		.loc 1 37 0
 192 010c 0F502DE9 		mov	r2, #0
 193              		mvn	r3, #0
 194              		.loc 1 38 0
 195 0110 0020A0E3 		ldr	r0, .L40
 196 0114 0030E0E3 		.loc 1 37 0
 197              		str	r2, [r3, #-4047]
 198 0118 08009FE5 		.loc 1 38 0
 199              		bl	rprintf
 200 011c CF2F03E5 	.L38:
 201              		b	.L38
 202 0120 FEFFFFEB 	.L41:
 203              		.align	2
 204 0124 FEFFFFEA 	.L40:
 205              		.word	.LC0
 206              	.LFE2:
 208 0128 00000000 		.section	.debug_frame,"",%progbits
 209              	.Lframe0:
 210              		.4byte	.LECIE0-.LSCIE0
 282              	.LLST1:
DEFINED SYMBOLS
                            *ABS*:00000000 irq.c
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:13     .text:00000000 init_VIC
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:22     .text:00000000 $a
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:55     .text:00000040 $d
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:185    .text:00000108 DefaultVICHandler
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:61     .text:00000044 install_irq
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:69     .text:00000044 $a
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:116    .text:000000a4 $d
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:122    .text:000000a8 uninstall_irq
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:131    .text:000000a8 $a
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:175    .text:00000104 $d
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:191    .text:00000108 $a
C:\Users\nancyhd\AppData\Local\Temp/cc8Waaaa.s:208    .text:00000128 $d

UNDEFINED SYMBOLS
rprintf
